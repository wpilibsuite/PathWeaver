wpilibTools.deps.wpilibVersion = "2024.+"

def nativeConfigName = 'wpilibNatives'
def nativeConfig = configurations.create(nativeConfigName)

def nativeTasks = wpilibTools.createExtractionTasks {
    configurationName = nativeConfigName
}

nativeTasks.addToSourceSetResources(sourceSets.main)
nativeConfig.dependencies.add wpilibTools.deps.wpilib("wpimath")
nativeConfig.dependencies.add wpilibTools.deps.wpilib("wpinet")
nativeConfig.dependencies.add wpilibTools.deps.wpilib("wpiutil")

dependencies {
    implementation wpilibTools.deps.wpilibJava("wpiutil")
    implementation wpilibTools.deps.wpilibJava("wpimath")
    implementation wpilibTools.deps.wpilibJava("wpinet")
    implementation wpilibTools.deps.wpilibJava("fieldImages")

    implementation wpilibTools.deps.javafx("base")
    implementation wpilibTools.deps.javafx("controls")
    implementation wpilibTools.deps.javafx("fxml")
    implementation wpilibTools.deps.javafx("graphics")

    implementation "com.fasterxml.jackson.core:jackson-annotations:2.12.4"
    implementation "com.fasterxml.jackson.core:jackson-core:2.12.4"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.12.4"

    implementation group: "org.fxmisc.easybind", name: "easybind", version: "1.0.3"

    implementation group: "javax.measure", name: "unit-api", version: "1.0"
    implementation group: "si.uom", name: "si-units", version: "2.0.1"
    implementation group: "systems.uom", name: "systems-common", version: "2.0"
    implementation group: "tech.units", name: "indriya", version: "2.0.1"

    implementation group: "com.google.code.gson", name: "gson", version: "2.8.5"
    implementation group: "org.apache.commons", name: "commons-csv", version: "1.5"

    implementation group: "org.ejml", name: "ejml-simple", version: "0.42"

    def junitJupiter = { name ->
        create group: 'org.junit.jupiter', name: name, version: '5.6.1'
    }

    testImplementation(junitJupiter("junit-jupiter-api"))
    testImplementation(junitJupiter("junit-jupiter-engine"))
    testImplementation(junitJupiter("junit-jupiter-params"))
}

ext.projectMainClass = "edu.wpi.first.pathweaver.Main"

spotbugsMain.enabled = false

tasks.withType(Test).configureEach {
    useJUnitPlatform {
        if (project.hasProperty("skipUI")) {
            excludeTags("UI")
        }
        if (!project.hasProperty("visibleUiTests")) {
            jvmArgs = [
                    "-Djava.awt.headless=true",
                    "-Dtestfx.robot=glass",
                    "-Dtestfx.headless=true",
                    "-Dprism.order=sw",
                    "-Dprism.text=t2k"
            ]
            excludeTags("NonHeadlessTests")
        }
        systemProperty("junit.jupiter.extensions.autodetection.enabled", true)
    }
    finalizedBy("jacocoTestReport")
}

tasks.withType(Javadoc).configureEach {
    failOnError = false
}
